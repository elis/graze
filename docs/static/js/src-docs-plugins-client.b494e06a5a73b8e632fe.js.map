{"version":3,"sources":["/Users/eli/projects/graze/packages/graze-site/src/docs/plugins/client.mdx","/Users/eli/projects/graze/packages/graze-site/src/docs/plugins/index.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_eli_projects_graze_packages_graze_site_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","href","_index_mdx__WEBPACK_IMPORTED_MODULE_3__","current","isMDXComponent","MyMenus","menus","useMenus","plugins","length","find","name","docs","useDocs","console","log","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","menu","map","item","key","concat","docz__WEBPACK_IMPORTED_MODULE_3__","to","route","_ref2"],"mappings":"wZAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,kBADR,kBAGAL,OAAAE,EAAA,EAAAF,CAAA,+MACAA,OAAAE,EAAA,EAAAF,CAAA,gBAAWA,OAAAE,EAAA,EAAAF,CAAA,UAAQM,WAAW,KAAnB,UAAX,6EACAN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,gBADZ,+YAqBLP,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,UACLL,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,WACHN,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,aAAkCN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAC7CN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,WAApB,KAA8EN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,UAA9E,qDAEJN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,UAA+BN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,UAA/B,2DAEFN,OAAAE,EAAA,EAAAF,CAAA,oBAAeA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,UAAf,6GAA+KN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,UAA/K,8CAAgRN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,iBAAhR,yBAAmWN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,WAAnW,KACAN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,gBADZ,wNAULP,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,WACLL,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,YACHN,OAAAE,EAAA,EAAAF,CAAA,UACEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAf,QAA6BN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MACxCN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,YAApB,0BAA+FN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,UAA/F,0CACAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,UAApB,WAA8EN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,UAA9E,cAAgJN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACnKE,KAAQ,YACPR,OAAAE,EAAA,EAAAF,CAAA,UAAQM,WAAW,KAAnB,WAFL,aAGAN,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,MAAKN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,WAApB,WAA+EN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,MAAvB,UAA/E,+EAAkNN,OAAAE,EAAA,EAAAF,CAAA,IAAAA,OAAAG,OAAA,CAAGG,WAAW,MAAS,CACrOE,KAAQ,qBACPR,OAAAE,EAAA,EAAAF,CAAA,UAAQM,WAAW,KAAnB,wBAGXN,OAAAE,EAAA,EAAAF,CAAA,oBAAeA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,WAAf,uDACAN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,gBADZ,4PAcLP,OAAAE,EAAA,EAAAF,CAACS,EAAA,QAAD,CAASC,QAAQ,kBAAkBN,QAAQ,8LAI/CR,EAAWe,gBAAiB,sZC9FfC,EAAU,SAAAb,GACrB,IAAMc,EAAQC,cACRC,EAAUF,GAASA,EAAMG,QAAUH,EAAMI,KAAK,SAAApB,GAAA,MAAqB,YAArBA,EAAEqB,OAChDC,EAAOC,cAEb,OADAC,QAAQC,IAAI,kBAAmB,CAACT,QAAOE,UAASI,SAE9CnB,OAAAE,EAAA,EAAAF,CAAAuB,EAAAC,EAAAC,SAAA,KACEzB,OAAAE,EAAA,EAAAF,CAAA,6CACAA,OAAAE,EAAA,EAAAF,CAAA,WACEA,OAAAE,EAAA,EAAAF,CAAA,UACGe,GAAWA,EAAQW,MAAQX,EAAQW,KAAKV,QACvCD,EAAQW,KACLC,IAAI,SAAAC,GAAI,OACP5B,OAAAE,EAAA,EAAAF,CAAA,MAAI6B,IAAG,SAAAC,OAAWF,EAAKV,OAAQlB,OAAAE,EAAA,EAAAF,CAAC+B,EAAA,EAAD,CAAMC,GAAIJ,EAAKK,OAAQL,EAAKV,kNAQ3E,IAKMxB,EAAc,CAClBkB,WAEIjB,EAAY,UACH,SAASC,EAATsC,GAGZ,IAFDpC,EAECoC,EAFDpC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAkC,EAAA,gBACD,OAAOlC,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,iBADR,iBAGAL,OAAAE,EAAA,EAAAF,CAAA,iEACAA,OAAAE,EAAA,EAAAF,CAAA,qOACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,sBADR,sBAGAL,OAAAE,EAAA,EAAAF,CAAA,sGACAA,OAAAE,EAAA,EAAAF,CAAA,mDAA8CA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,mBAA9C,mFACAN,OAAAE,EAAA,EAAAF,CAAA,mDAA8CA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,WAA9C,KACAN,OAAAE,EAAA,EAAAF,CAAA,oBAAeA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,mBAAf,KACAN,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMG,WAAW,OAAU,CAC5BC,UAAa,gBADZ,mWAcLP,OAAAE,EAAA,EAAAF,CAAA,SAAGA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,WAAH,mGAEAN,OAAAE,EAAA,EAAAF,CAAA,2BAAsBA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,kBAAtB,+CAEAN,OAAAE,EAAA,EAAAF,CAAA,sDAAiDA,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,UAAjD,uGAC8EN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,WAD9E,4BAC8JN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,YAD9J,aAEAN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,oBADR,oBAGAL,OAAAE,EAAA,EAAAF,CAAA,4DAAuDA,OAAAE,EAAA,EAAAF,CAAA,UAAQM,WAAW,KAAnB,UAAvD,KAAuGN,OAAAE,EAAA,EAAAF,CAAA,UAAQM,WAAW,KAAnB,UAAvG,SAA2JN,OAAAE,EAAA,EAAAF,CAAA,UAAQM,WAAW,KAAnB,OAA3J,+DACAN,OAAAE,EAAA,EAAAF,CAAA,+FACAA,OAAAE,EAAA,EAAAF,CAAA,+CAA0CA,OAAAE,EAAA,EAAAF,CAAA,UAAQM,WAAW,KAAnB,uBAA1C,oHAAsNN,OAAAE,EAAA,EAAAF,CAAA,UAAQM,WAAW,KAAnB,WAAtN,gBAAkRN,OAAAE,EAAA,EAAAF,CAAA,UAAQM,WAAW,KAAnB,WAAlR,mBAAiVN,OAAAE,EAAA,EAAAF,CAAA,UAAQM,WAAW,KAAnB,UAAjV,eAGAN,OAAAE,EAAA,EAAAF,CAACY,EAAD,CAASR,QAAQ,6LAIrBR,EAAWe,gBAAiB","file":"static/js/src-docs-plugins-client.37ec47db.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { MyMenus } from './index.mdx'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"client-plugins\"\n    }}>{`Client Plugins`}</h1>\n    <p>{`Graze client plugin directive allows you to wrap the application exclusively on the client side, allowing the plugin to execute client specific bootstrapping and cleanup any server-side outputs.`}</p>\n    <p>{`The `}<strong parentName=\"p\">{`onLoad`}</strong>{` property is required to activate any of the client directives functions.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`export const client = {\n  onLoad: () => {\n    const { myAwesomeModule } = require('./my-module')\n    const client = myAwesomeModule.getClient()\n    return {\n      client\n    }\n  },\n  Wrapper: ({ fields: { client }, children }) => {\n    const { Provider } = require('./my-module')\n\n    return (\n      <Provider client={client}>\n        {children}\n      </Provider>\n    )\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"onload\"\n    }}><inlineCode parentName=\"h2\">{`onLoad`}</inlineCode></h2>\n    <ul>\n      <li parentName=\"ul\">{`Parameters`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`options`}</inlineCode>{`: `}<inlineCode parentName=\"li\">{`object`}</inlineCode>{` — additional options passed to the plugin`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Return `}<inlineCode parentName=\"li\">{`object`}</inlineCode>{` — pass in any values needed in wrapper functions`}</li>\n    </ul>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`onLoad`}</inlineCode>{` to do any perliminary work like loading external resources or connecting to APIs. Anything return by the `}<inlineCode parentName=\"p\">{`onLoad`}</inlineCode>{` function will be passed in as part of the `}<inlineCode parentName=\"p\">{`Plugin.fields`}</inlineCode>{` property later on to `}<inlineCode parentName=\"p\">{`Wrapper`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`export const client = {\n  onLoad: ({ configValue }) => {\n    const someOtherResource = require('my-resource')\n    const resource = someOtherResource.getResource(configValue)\n    return { resource }\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"wrapper\"\n    }}><inlineCode parentName=\"h2\">{`Wrapper`}</inlineCode></h2>\n    <ul>\n      <li parentName=\"ul\">{`Props`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`children`}</inlineCode>{` — React children `}<inlineCode parentName=\"li\">{`object`}</inlineCode>{` that should be wrapped by the wrapper`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`fields`}</inlineCode>{` — `}<inlineCode parentName=\"li\">{`Object`}</inlineCode>{` passed by `}<a parentName=\"li\" {...{\n              \"href\": \"#onload\"\n            }}><strong parentName=\"a\">{`onLoad`}</strong></a>{` function`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`options`}</inlineCode>{` — `}<inlineCode parentName=\"li\">{`Object`}</inlineCode>{` contains any additional properties passed to the plugins' configuration in `}<a parentName=\"li\" {...{\n              \"href\": \"/plugins/#config\"\n            }}><strong parentName=\"a\">{`graze.config.js`}</strong></a></li>\n        </ul></li>\n    </ul>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`Wrapper`}</inlineCode>{` to wrap the app with any providers you might want.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`export const client = {\n  Wrapper: ({ fields: { resource }, children }) => {\n    const MyAwesomeProvider = require('./store')\n    return (\n      <MyAwesomeProvider store={resource}>\n        {children}\n      </ApolloProvider>\n    )\n  }\n}\n`}</code></pre>\n\n    <MyMenus current='/plugins/server' mdxType=\"MyMenus\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { useMenus, useDocs, Link } from 'docz'\nexport const MyMenus = props => {\n  const menus = useMenus()\n  const plugins = menus && menus.length && menus.find(({name}) => name === 'Plugins')\n  const docs = useDocs()\n  console.log('what are menus?', {menus, plugins, docs})\n  return (\n    <>\n      <h3>Learn more about graze plugins:</h3>\n      <div>\n        <ul>\n          {plugins && plugins.menu && plugins.menu.length && (\n            plugins.menu\n              .map(item => (\n                <li key={`items ${item.name}`}><Link to={item.route}>{item.name}</Link></li>\n              ))\n          )}\n        </ul>\n      </div>\n    </>\n  )\n}\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  MyMenus\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"graze-plugins\"\n    }}>{`Graze Plugins`}</h1>\n    <p>{`Graze provides a simple but powerful plugins system.`}</p>\n    <p>{`Unlike components that you might create on a per site or app the plugins system is designed to access the low-level APIs to easily modify the functionality of Graze at the different life-cycle stages of your project.`}</p>\n    <h2 {...{\n      \"id\": \"configuration-file\"\n    }}>{`Configuration File`}</h2>\n    <p>{`The configuration file for Graze allows different functionality to be added to a project.`}</p>\n    <p>{`The configuration file should be named `}<inlineCode parentName=\"p\">{`graze.config.js`}</inlineCode>{` and placed at the root of your project and contain the relevant named exports.`}</p>\n    <p>{`Currently the only supported export is `}<inlineCode parentName=\"p\">{`plugins`}</inlineCode>{`.`}</p>\n    <p>{`Example `}<inlineCode parentName=\"p\">{`graze.config.js`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`export const plugins = [\n  require('./src/plugins/graze-styled-components'),\n  require('./src/plugins/graze-material-ui'),\n  require('./src/plugins/graze-tutorial'),\n  require('./src/plugins/graze-graphcms'),\n  {\n    module: require('./src/plugins/graze-ga'),\n    trackingId: 'UA-138092593-2',\n    gaOptions: { name: 'graze-setup' }\n  }\n]\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`plugins`}</inlineCode>{` export should be an array containing objects or require\nstatements like in the above example.`}</p>\n    <p>{`When passing a `}<inlineCode parentName=\"p\">{`require('...')`}</inlineCode>{` statement the loaded module will be\nused.`}</p>\n    <p>{`When passing an object, it must contain a `}<inlineCode parentName=\"p\">{`module`}</inlineCode>{` property with the\nplugin module as value. The rest of the properties are passed in as the plugins `}<inlineCode parentName=\"p\">{`options`}</inlineCode>{`, as canbe be see in the `}<inlineCode parentName=\"p\">{`react-ga`}</inlineCode>{` example.`}</p>\n    <h2 {...{\n      \"id\": \"plugin-structure\"\n    }}>{`Plugin Structure`}</h2>\n    <p>{`A Graze plugin is composed of three directives: `}<strong parentName=\"p\">{`server`}</strong>{`, `}<strong parentName=\"p\">{`client`}</strong>{`, and `}<strong parentName=\"p\">{`app`}</strong>{`, each of which is executed according to the plugins needs.`}</p>\n    <p>{`A plugin module is expected to export one or more directives to function properly.`}</p>\n    <p>{`Each of the directives contains an `}<strong parentName=\"p\">{`activation function`}</strong>{` that will signal to graze that the plugin needs to do something, and depending on the directive it will contain `}<strong parentName=\"p\">{`Wrapper`}</strong>{` components, `}<strong parentName=\"p\">{`wrapper`}</strong>{` functions, and `}<strong parentName=\"p\">{`output`}</strong>{` functions.`}</p>\n\n\n    <MyMenus mdxType=\"MyMenus\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}