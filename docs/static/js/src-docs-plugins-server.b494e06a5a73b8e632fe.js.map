{"version":3,"sources":["/Users/eli/projects/graze/packages/graze-site/src/docs/plugins/index.mdx","/Users/eli/projects/graze/packages/graze-site/src/docs/plugins/server.mdx"],"names":["MyMenus","props","menus","useMenus","plugins","length","find","_ref","name","docs","useDocs","console","log","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","menu","map","item","key","concat","docz__WEBPACK_IMPORTED_MODULE_3__","to","route","layoutProps","MDXLayout","MDXContent","_ref2","components","_Users_eli_projects_graze_packages_graze_site_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","assign","mdxType","id","parentName","className","isMDXComponent","test","href","___WEBPACK_IMPORTED_MODULE_3__","current"],"mappings":"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","file":"static/js/src-docs-plugins-server.10b30703.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { useMenus, useDocs, Link } from 'docz'\nexport const MyMenus = props => {\n  const menus = useMenus()\n  const plugins = menus && menus.length && menus.find(({name}) => name === 'Plugins')\n  const docs = useDocs()\n  console.log('what are menus?', {menus, plugins, docs})\n  return (\n    <>\n      <h3>Learn more about graze plugins:</h3>\n      <div>\n        <ul>\n          {plugins && plugins.menu && plugins.menu.length && (\n            plugins.menu\n              .map(item => (\n                <li key={`items ${item.name}`}><Link to={item.route}>{item.name}</Link></li>\n              ))\n          )}\n        </ul>\n      </div>\n    </>\n  )\n}\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  MyMenus\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"graze-plugins\"\n    }}>{`Graze Plugins`}</h1>\n    <p>{`Graze provides a simple but powerful plugins system.`}</p>\n    <p>{`Unlike components that you might create on a per site or app the plugins system is designed to access the low-level APIs to easily modify the functionality of Graze at the different life-cycle stages of your project.`}</p>\n    <h2 {...{\n      \"id\": \"configuration-file\"\n    }}>{`Configuration File`}</h2>\n    <p>{`The configuration file for Graze allows different functionality to be added to a project.`}</p>\n    <p>{`The configuration file should be named `}<inlineCode parentName=\"p\">{`graze.config.js`}</inlineCode>{` and placed at the root of your project and contain the relevant named exports.`}</p>\n    <p>{`Currently the only supported export is `}<inlineCode parentName=\"p\">{`plugins`}</inlineCode>{`.`}</p>\n    <p>{`Example `}<inlineCode parentName=\"p\">{`graze.config.js`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`export const plugins = [\n  require('./src/plugins/graze-styled-components'),\n  require('./src/plugins/graze-material-ui'),\n  require('./src/plugins/graze-tutorial'),\n  require('./src/plugins/graze-graphcms'),\n  {\n    module: require('./src/plugins/graze-ga'),\n    trackingId: 'UA-138092593-2',\n    gaOptions: { name: 'graze-setup' }\n  }\n]\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`plugins`}</inlineCode>{` export should be an array containing objects or require\nstatements like in the above example.`}</p>\n    <p>{`When passing a `}<inlineCode parentName=\"p\">{`require('...')`}</inlineCode>{` statement the loaded module will be\nused.`}</p>\n    <p>{`When passing an object, it must contain a `}<inlineCode parentName=\"p\">{`module`}</inlineCode>{` property with the\nplugin module as value. The rest of the properties are passed in as the plugins `}<inlineCode parentName=\"p\">{`options`}</inlineCode>{`, as canbe be see in the `}<inlineCode parentName=\"p\">{`react-ga`}</inlineCode>{` example.`}</p>\n    <h2 {...{\n      \"id\": \"plugin-structure\"\n    }}>{`Plugin Structure`}</h2>\n    <p>{`A Graze plugin is composed of three directives: `}<strong parentName=\"p\">{`server`}</strong>{`, `}<strong parentName=\"p\">{`client`}</strong>{`, and `}<strong parentName=\"p\">{`app`}</strong>{`, each of which is executed according to the plugins needs.`}</p>\n    <p>{`A plugin module is expected to export one or more directives to function properly.`}</p>\n    <p>{`Each of the directives contains an `}<strong parentName=\"p\">{`activation function`}</strong>{` that will signal to graze that the plugin needs to do something, and depending on the directive it will contain `}<strong parentName=\"p\">{`Wrapper`}</strong>{` components, `}<strong parentName=\"p\">{`wrapper`}</strong>{` functions, and `}<strong parentName=\"p\">{`output`}</strong>{` functions.`}</p>\n\n\n    <MyMenus mdxType=\"MyMenus\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { MyMenus } from './'\nexport const test = console.log('what are MyMenus?', MyMenus)\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  test\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"server-plugins\"\n    }}>{`Server Plugins`}</h1>\n    <p>{`The server plugin is executed on each request to the server.`}</p>\n    <p>{`The `}<strong parentName=\"p\">{`onRequest`}</strong>{` property is required to activate any of the server plugin functions.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`export const server = {\n  onRequest: (req, res, options) => {\n    const someOtherResource = require('my-resource')\n    return { someOtherResource }\n  },\n  wrapper: (wrapped, { fields: { someOtherResource } }) => {\n    const wrapper = someOtherResource.withResource\n    return wrapper(wrapped)\n  },\n  Wrapper: ({ fields: { someOtherResource }, children }) => {\n    const MyAwesomeProvider = require('./store')\n    return (\n      <MyAwesomeProvider store={someOtherResource.store}>\n        {children}\n      </ApolloProvider>\n    )\n  },\n  output: ({ fields: { someOtherResource } }) => {\n    const extracted = someOtherResource.extract()\n    return \\`<meta name='my-awesome-meta' content='\\${extracted.comment}' />\\`\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"onrequest\"\n    }}><inlineCode parentName=\"h2\">{`onRequest`}</inlineCode></h2>\n    <ul>\n      <li parentName=\"ul\">{`Parameters`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`req`}</inlineCode>{`: expressjs `}<inlineCode parentName=\"li\">{`Request`}</inlineCode>{` object`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`res`}</inlineCode>{`: expressjs `}<inlineCode parentName=\"li\">{`Response`}</inlineCode>{` object`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`options`}</inlineCode>{`: `}<inlineCode parentName=\"li\">{`object`}</inlineCode>{` — additional options passed to the plugin`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Return `}<inlineCode parentName=\"li\">{`object`}</inlineCode>{` — pass in any values needed in wrapper/output functions`}</li>\n    </ul>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`onRequest`}</inlineCode>{` to do any perliminary work like loading external resources or connecting to APIs. Anything return by the `}<inlineCode parentName=\"p\">{`onRequest`}</inlineCode>{` function will be passed in as part of the `}<inlineCode parentName=\"p\">{`Plugin.fields`}</inlineCode>{` property later on to `}<inlineCode parentName=\"p\">{`Wrapper`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`wrapper`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`output`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`export const server = {\n  onRequest: (req, res, options) => {\n    const someOtherResource = require('my-resource')\n    return { someOtherResource }\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"wrapper\"\n    }}><inlineCode parentName=\"h2\">{`Wrapper`}</inlineCode></h2>\n    <ul>\n      <li parentName=\"ul\">{`Props`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`children`}</inlineCode>{` — React children `}<inlineCode parentName=\"li\">{`object`}</inlineCode>{` that should be wrapped by the wrapper`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`fields`}</inlineCode>{` — `}<inlineCode parentName=\"li\">{`Object`}</inlineCode>{` passed by `}<a parentName=\"li\" {...{\n              \"href\": \"#onrequest\"\n            }}><strong parentName=\"a\">{`onRerequest`}</strong></a>{` function`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`options`}</inlineCode>{` — `}<inlineCode parentName=\"li\">{`Object`}</inlineCode>{` contains any additional properties passed to the plugins' configuration in `}<a parentName=\"li\" {...{\n              \"href\": \"#config\"\n            }}><strong parentName=\"a\">{`graze.config.js`}</strong></a></li>\n        </ul></li>\n    </ul>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`Wrapper`}</inlineCode>{` to wrap the app with any providers you might want.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`export const server = {\n  Wrapper: ({ fields: { someOtherResource }, children }) => {\n    const MyAwesomeProvider = require('./store')\n    return (\n      <MyAwesomeProvider store={someOtherResource.store}>\n        {children}\n      </ApolloProvider>\n    )\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"wrapper-1\"\n    }}><inlineCode parentName=\"h2\">{`wrapper`}</inlineCode></h2>\n    <ul>\n      <li parentName=\"ul\">{`Parameters`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`wrapped`}</inlineCode>{` — the wrapped component`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`plugin`}</inlineCode>{` — `}<inlineCode parentName=\"li\">{`Object`}</inlineCode>{` containing the plugin options, directives`}</li>\n        </ul></li>\n    </ul>\n    <p>{`The `}<inlineCode parentName=\"p\">{`wrapper`}</inlineCode>{` is used to wrap components functionally ala `}<inlineCode parentName=\"p\">{`withRouter(component)`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`export const server = {\n  wrapper: (wrapped, { fields: { someOtherResource } }) => {\n    const wrapper = someOtherResource.withResource\n    return wrapper(wrapped)\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"output\"\n    }}><inlineCode parentName=\"h2\">{`output`}</inlineCode></h2>\n    <ul>\n      <li parentName=\"ul\">{`Parameters`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`plugin`}</inlineCode>{` — `}<inlineCode parentName=\"li\">{`Object`}</inlineCode>{` containing the plugin options, directives`}</li>\n        </ul></li>\n    </ul>\n    <p>{`The `}<inlineCode parentName=\"p\">{`output`}</inlineCode>{` hook allows to tap into the server generated HTML output for plugins that need to generate server-side content.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`export const server = {\n  output: ({ fields: { someOtherResource }, options: { myValue } }) => {\n    const extracted = someOtherResource.extract()\n    return \\`\n    <meta name='my-awesome-meta' content='\\${extracted.comment}' />\n    <meta name='my-awesome-value' content='\\${myValue}' />\n    \\`\n  }\n}\n`}</code></pre>\n\n\n    <MyMenus current='/plugins/server' mdxType=\"MyMenus\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}