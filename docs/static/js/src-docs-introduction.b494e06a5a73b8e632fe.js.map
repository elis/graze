{"version":3,"sources":["/Users/eli/projects/graze/packages/graze-site/src/docs/introduction.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_eli_projects_graze_packages_graze_site_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","isMDXComponent"],"mappings":"+WAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAC5EJ,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,yBADR,yBAGAL,OAAAE,EAAA,EAAAF,CAAA,wEAAmEA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,KAAf,UAAnE,gEACAN,OAAAE,EAAA,EAAAF,CAAA,kJAA6IA,OAAAE,EAAA,EAAAF,CAAA,UAAQM,WAAW,KAAnB,WAA7I,+EAAwQN,OAAAE,EAAA,EAAAF,CAAA,UAAQM,WAAW,KAAnB,UAAxQ,gBACAN,OAAAE,EAAA,EAAAF,CAAA,qIAAgIA,OAAAE,EAAA,EAAAF,CAAA,MAAIM,WAAW,KAAf,2BAAhI,uGACAN,OAAAE,EAAA,EAAAF,CAAA,uPACAA,OAAAE,EAAA,EAAAF,CAAA,mDAA8CA,OAAAE,EAAA,EAAAF,CAAA,UAAQM,WAAW,KAAnB,cAA9C,8MACAN,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,eADR,eAGAL,OAAAE,EAAA,EAAAF,CAAA,mUACAA,OAAAE,EAAA,EAAAF,CAAA,yOACAA,OAAAE,EAAA,EAAAF,CAAA,gOACAA,OAAAE,EAAA,EAAAF,CAAA,mEACAA,OAAAE,EAAA,EAAAF,CAAA,sLACAA,OAAAE,EAAA,EAAAF,CAAA,KAAQ,CACNK,GAAM,gBADR,gBAGAL,OAAAE,EAAA,EAAAF,CAAA,wVACAA,OAAAE,EAAA,EAAAF,CAAA,oCAA+BA,OAAAE,EAAA,EAAAF,CAAA,UAAQM,WAAW,KAAnB,cAA/B,iDAA+HN,OAAAE,EAAA,EAAAF,CAAA,cAAYM,WAAW,KAAvB,wBAA/H,iEACAN,OAAAE,EAAA,EAAAF,CAAA,wCACAA,OAAAE,EAAA,EAAAF,CAAA,gKACAA,OAAAE,EAAA,EAAAF,CAAA,sSAIJJ,EAAWW,gBAAiB","file":"static/js/src-docs-introduction.23eeaba1.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"introduction-to-graze\"\n    }}>{`Introduction to Graze`}</h1>\n    <p>{`Graze is a result of years of searching for the --perfect-- `}<em parentName=\"p\">{`decent`}</em>{` tooling stack to create and maintain websites and web apps.`}</p>\n    <p>{`Technology advances quickly, our tooling change rapidly, but our content stacks remain somewhat stagnant. On the one side we have the `}<strong parentName=\"p\">{`Dynamic`}</strong>{` Content Management Software, i.e. Wordpress, and on the other side we have `}<strong parentName=\"p\">{`Static`}</strong>{` generators.`}</p>\n    <p>{`As a developer, and often a busiess owner, you have to decide. Dynamic or static. And really, sometimes you just want to `}<em parentName=\"p\">{`put something out there`}</em>{`. Without getting into the mess of setting up, configuring, downloading, installing, etc' etc' etc'`}</p>\n    <p>{`Graze is a no-compromise blend of both Static and Dynamic content. It's better than both. With Graze you can use the stack you're familiar with and produce crisp websites and fully functional web apps rendered instantly on the server.`}</p>\n    <p>{`With Graze your app or website renders `}<strong parentName=\"p\">{`sub-second`}</strong>{` instantly as the user receives the first few hundred bytes from the server. Your content is visible to the user in one second, and if you're using SVGs and proper CSS it's fully styled. No compromises.`}</p>\n    <h2 {...{\n      \"id\": \"the-problem\"\n    }}>{`The Problem`}</h2>\n    <p>{`Client-side execution performance and capabilities came a long way since the days of server-side scripting, and combined with blazing fast CDNs, and even browser pre-loading that still produces a sub-par experience that your goregrously designed and meticoulesly coded isn't visible for a good 5 to 10 seconds.`}</p>\n    <p>{`Sure, you can hook up custom SSR process — it's been possible for quite a while now — but it's a pain in the ass to get up and running in the first place, and once it's up it's a pain to maintain and to update.`}</p>\n    <p>{`You can't use old components because they have outdated dependencies, so just the matter of trying to try and get the environment running, if not properly and timely maintained, is sometimes a task in of itself.`}</p>\n    <p>{`When really these tools should be... just that: Tools.`}</p>\n    <p>{`Graze is an attempt to give the code that we need to write the focus that it needs, while giving you flexibility to modify everything you need for your own custom setup.`}</p>\n    <h2 {...{\n      \"id\": \"the-solution\"\n    }}>{`The Solution`}</h2>\n    <p>{`Leveraging the lavish selection of serverless solutions such as Google's Firebase, GraphCMS, Amazon's Lambda, and alike Graze allows you to easily connect to any API or data source, dynamic, remote, static, you name it, to write your website or webapp focusing on your code rather than the precious wrapper that is the environment.`}</p>\n    <p>{`Graze is designed to be `}<strong parentName=\"p\">{`disposable`}</strong>{`, focusing on letting you to quickly get from `}<inlineCode parentName=\"p\">{`npx create-graze-app`}</inlineCode>{` to a fully deployed blazing fast app in a matter of minutes.`}</p>\n    <p>{`And it's fully transparent.`}</p>\n    <p>{`You get to keep writing the same code that you like, your components can be part of the project source code or easily included as external modules.`}</p>\n    <p>{`You don't need to learn new APIs. You don't need to edit lengthy config files. It Just Works™️.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}