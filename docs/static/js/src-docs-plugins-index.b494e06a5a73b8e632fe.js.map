{"version":3,"sources":["/Users/eli/projects/graze/packages/graze-site/src/docs/plugins/index.mdx"],"names":["MyMenus","props","menus","useMenus","plugins","length","find","_ref","name","docs","useDocs","console","log","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","menu","map","item","key","concat","docz__WEBPACK_IMPORTED_MODULE_3__","to","route","layoutProps","MDXLayout","MDXContent","_ref2","components","_Users_eli_projects_graze_packages_graze_site_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","assign","mdxType","id","parentName","className","isMDXComponent"],"mappings":"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","file":"static/js/src-docs-plugins-index.fab9e5f8.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { useMenus, useDocs, Link } from 'docz'\nexport const MyMenus = props => {\n  const menus = useMenus()\n  const plugins = menus && menus.length && menus.find(({name}) => name === 'Plugins')\n  const docs = useDocs()\n  console.log('what are menus?', {menus, plugins, docs})\n  return (\n    <>\n      <h3>Learn more about graze plugins:</h3>\n      <div>\n        <ul>\n          {plugins && plugins.menu && plugins.menu.length && (\n            plugins.menu\n              .map(item => (\n                <li key={`items ${item.name}`}><Link to={item.route}>{item.name}</Link></li>\n              ))\n          )}\n        </ul>\n      </div>\n    </>\n  )\n}\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  MyMenus\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"graze-plugins\"\n    }}>{`Graze Plugins`}</h1>\n    <p>{`Graze provides a simple but powerful plugins system.`}</p>\n    <p>{`Unlike components that you might create on a per site or app the plugins system is designed to access the low-level APIs to easily modify the functionality of Graze at the different life-cycle stages of your project.`}</p>\n    <h2 {...{\n      \"id\": \"configuration-file\"\n    }}>{`Configuration File`}</h2>\n    <p>{`The configuration file for Graze allows different functionality to be added to a project.`}</p>\n    <p>{`The configuration file should be named `}<inlineCode parentName=\"p\">{`graze.config.js`}</inlineCode>{` and placed at the root of your project and contain the relevant named exports.`}</p>\n    <p>{`Currently the only supported export is `}<inlineCode parentName=\"p\">{`plugins`}</inlineCode>{`.`}</p>\n    <p>{`Example `}<inlineCode parentName=\"p\">{`graze.config.js`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`export const plugins = [\n  require('./src/plugins/graze-styled-components'),\n  require('./src/plugins/graze-material-ui'),\n  require('./src/plugins/graze-tutorial'),\n  require('./src/plugins/graze-graphcms'),\n  {\n    module: require('./src/plugins/graze-ga'),\n    trackingId: 'UA-138092593-2',\n    gaOptions: { name: 'graze-setup' }\n  }\n]\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`plugins`}</inlineCode>{` export should be an array containing objects or require\nstatements like in the above example.`}</p>\n    <p>{`When passing a `}<inlineCode parentName=\"p\">{`require('...')`}</inlineCode>{` statement the loaded module will be\nused.`}</p>\n    <p>{`When passing an object, it must contain a `}<inlineCode parentName=\"p\">{`module`}</inlineCode>{` property with the\nplugin module as value. The rest of the properties are passed in as the plugins `}<inlineCode parentName=\"p\">{`options`}</inlineCode>{`, as canbe be see in the `}<inlineCode parentName=\"p\">{`react-ga`}</inlineCode>{` example.`}</p>\n    <h2 {...{\n      \"id\": \"plugin-structure\"\n    }}>{`Plugin Structure`}</h2>\n    <p>{`A Graze plugin is composed of three directives: `}<strong parentName=\"p\">{`server`}</strong>{`, `}<strong parentName=\"p\">{`client`}</strong>{`, and `}<strong parentName=\"p\">{`app`}</strong>{`, each of which is executed according to the plugins needs.`}</p>\n    <p>{`A plugin module is expected to export one or more directives to function properly.`}</p>\n    <p>{`Each of the directives contains an `}<strong parentName=\"p\">{`activation function`}</strong>{` that will signal to graze that the plugin needs to do something, and depending on the directive it will contain `}<strong parentName=\"p\">{`Wrapper`}</strong>{` components, `}<strong parentName=\"p\">{`wrapper`}</strong>{` functions, and `}<strong parentName=\"p\">{`output`}</strong>{` functions.`}</p>\n\n\n    <MyMenus mdxType=\"MyMenus\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}