(window.webpackJsonp=window.webpackJsonp||[]).push([[9,11],{"./src/docs/plugins/client.mdx":function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return c});var i=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),r=(t("./node_modules/react/index.js"),t("./node_modules/@mdx-js/react/dist/index.es.js")),a=t("./src/docs/plugins/index.mdx"),o={},l="wrapper";function c(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(r.b)(l,Object.assign({},o,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"client-plugins"},"Client Plugins"),Object(r.b)("p",null,"Graze client plugin directive allows you to wrap the application exclusively on the client side, allowing the plugin to execute client specific bootstrapping and cleanup any server-side outputs."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"onLoad")," property is required to activate any of the client directives functions."),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"export const client = {\n  onLoad: () => {\n    const { myAwesomeModule } = require('./my-module')\n    const client = myAwesomeModule.getClient()\n    return {\n      client\n    }\n  },\n  Wrapper: ({ fields: { client }, children }) => {\n    const { Provider } = require('./my-module')\n\n    return (\n      <Provider client={client}>\n        {children}\n      </Provider>\n    )\n  }\n}\n")),Object(r.b)("h2",{id:"onload"},Object(r.b)("inlineCode",{parentName:"h2"},"onLoad")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Parameters",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"options"),": ",Object(r.b)("inlineCode",{parentName:"li"},"object")," \u2014 additional options passed to the plugin"))),Object(r.b)("li",{parentName:"ul"},"Return ",Object(r.b)("inlineCode",{parentName:"li"},"object")," \u2014 pass in any values needed in wrapper functions")),Object(r.b)("p",null,"Use the ",Object(r.b)("inlineCode",{parentName:"p"},"onLoad")," to do any perliminary work like loading external resources or connecting to APIs. Anything return by the ",Object(r.b)("inlineCode",{parentName:"p"},"onLoad")," function will be passed in as part of the ",Object(r.b)("inlineCode",{parentName:"p"},"Plugin.fields")," property later on to ",Object(r.b)("inlineCode",{parentName:"p"},"Wrapper"),"."),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"export const client = {\n  onLoad: ({ configValue }) => {\n    const someOtherResource = require('my-resource')\n    const resource = someOtherResource.getResource(configValue)\n    return { resource }\n  }\n}\n")),Object(r.b)("h2",{id:"wrapper"},Object(r.b)("inlineCode",{parentName:"h2"},"Wrapper")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Props",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"children")," \u2014 React children ",Object(r.b)("inlineCode",{parentName:"li"},"object")," that should be wrapped by the wrapper"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"fields")," \u2014 ",Object(r.b)("inlineCode",{parentName:"li"},"Object")," passed by ",Object(r.b)("a",Object.assign({parentName:"li"},{href:"#onload"}),Object(r.b)("strong",{parentName:"a"},"onLoad"))," function"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"options")," \u2014 ",Object(r.b)("inlineCode",{parentName:"li"},"Object")," contains any additional properties passed to the plugins' configuration in ",Object(r.b)("a",Object.assign({parentName:"li"},{href:"/plugins/#config"}),Object(r.b)("strong",{parentName:"a"},"graze.config.js")))))),Object(r.b)("p",null,"Use the ",Object(r.b)("inlineCode",{parentName:"p"},"Wrapper")," to wrap the app with any providers you might want."),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"export const client = {\n  Wrapper: ({ fields: { resource }, children }) => {\n    const MyAwesomeProvider = require('./store')\n    return (\n      <MyAwesomeProvider store={resource}>\n        {children}\n      </ApolloProvider>\n    )\n  }\n}\n")),Object(r.b)(a.MyMenus,{current:"/plugins/server",mdxType:"MyMenus"}))}c&&c===Object(c)&&Object.isExtensible(c)&&Object.defineProperty(c,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/docs/plugins/client.mdx"}}),c.isMDXComponent=!0},"./src/docs/plugins/index.mdx":function(e,n,t){"use strict";t.r(n),t.d(n,"MyMenus",function(){return c}),t.d(n,"default",function(){return b});var i=t("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),r=t("./node_modules/react/index.js"),a=t.n(r),o=t("./node_modules/@mdx-js/react/dist/index.es.js"),l=t("./node_modules/docz/dist/index.esm.js"),c=function(e){var n=Object(l.h)(),t=n&&n.length&&n.find(function(e){return"Plugins"===e.name}),i=Object(l.g)();return console.log("what are menus?",{menus:n,plugins:t,docs:i}),Object(o.b)(a.a.Fragment,null,Object(o.b)("h3",null,"Learn more about graze plugins:"),Object(o.b)("div",null,Object(o.b)("ul",null,t&&t.menu&&t.menu.length&&t.menu.map(function(e){return Object(o.b)("li",{key:"items ".concat(e.name)},Object(o.b)(l.b,{to:e.route},e.name))}))))};"undefined"!==typeof c&&c&&c===Object(c)&&Object.isExtensible(c)&&Object.defineProperty(c,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MyMenus",filename:"src/docs/plugins/index.mdx"}});var s={MyMenus:c},p="wrapper";function b(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(o.b)(p,Object.assign({},s,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"graze-plugins"},"Graze Plugins"),Object(o.b)("p",null,"Graze provides a simple but powerful plugins system."),Object(o.b)("p",null,"Unlike components that you might create on a per site or app the plugins system is designed to access the low-level APIs to easily modify the functionality of Graze at the different life-cycle stages of your project."),Object(o.b)("h2",{id:"configuration-file"},"Configuration File"),Object(o.b)("p",null,"The configuration file for Graze allows different functionality to be added to a project."),Object(o.b)("p",null,"The configuration file should be named ",Object(o.b)("inlineCode",{parentName:"p"},"graze.config.js")," and placed at the root of your project and contain the relevant named exports."),Object(o.b)("p",null,"Currently the only supported export is ",Object(o.b)("inlineCode",{parentName:"p"},"plugins"),"."),Object(o.b)("p",null,"Example ",Object(o.b)("inlineCode",{parentName:"p"},"graze.config.js"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"export const plugins = [\n  require('./src/plugins/graze-styled-components'),\n  require('./src/plugins/graze-material-ui'),\n  require('./src/plugins/graze-tutorial'),\n  require('./src/plugins/graze-graphcms'),\n  {\n    module: require('./src/plugins/graze-ga'),\n    trackingId: 'UA-138092593-2',\n    gaOptions: { name: 'graze-setup' }\n  }\n]\n")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"plugins")," export should be an array containing objects or require\nstatements like in the above example."),Object(o.b)("p",null,"When passing a ",Object(o.b)("inlineCode",{parentName:"p"},"require('...')")," statement the loaded module will be\nused."),Object(o.b)("p",null,"When passing an object, it must contain a ",Object(o.b)("inlineCode",{parentName:"p"},"module")," property with the\nplugin module as value. The rest of the properties are passed in as the plugins ",Object(o.b)("inlineCode",{parentName:"p"},"options"),", as canbe be see in the ",Object(o.b)("inlineCode",{parentName:"p"},"react-ga")," example."),Object(o.b)("h2",{id:"plugin-structure"},"Plugin Structure"),Object(o.b)("p",null,"A Graze plugin is composed of three directives: ",Object(o.b)("strong",{parentName:"p"},"server"),", ",Object(o.b)("strong",{parentName:"p"},"client"),", and ",Object(o.b)("strong",{parentName:"p"},"app"),", each of which is executed according to the plugins needs."),Object(o.b)("p",null,"A plugin module is expected to export one or more directives to function properly."),Object(o.b)("p",null,"Each of the directives contains an ",Object(o.b)("strong",{parentName:"p"},"activation function")," that will signal to graze that the plugin needs to do something, and depending on the directive it will contain ",Object(o.b)("strong",{parentName:"p"},"Wrapper")," components, ",Object(o.b)("strong",{parentName:"p"},"wrapper")," functions, and ",Object(o.b)("strong",{parentName:"p"},"output")," functions."),Object(o.b)(c,{mdxType:"MyMenus"}))}b&&b===Object(b)&&Object.isExtensible(b)&&Object.defineProperty(b,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/docs/plugins/index.mdx"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=src-docs-plugins-client.b494e06a5a73b8e632fe.js.map